import type { SVGProps } from "react";
import { sizeMap } from "../../metadata/sizing.js";
import type { IconProps } from "../types.js";

const IconPinFilled = (props: IconProps & SVGProps<SVGSVGElement>) => {
	const size = sizeMap[props?.size ?? "m"];
	const label = props?.label ?? "Icon";

	switch (props?.size) {
		case "l":
			return (
				<svg
					viewBox="0 0 24 24"
					fill="currentColor"
					xmlns="http://www.w3.org/2000/svg"
					width={size}
					height={size}
					aria-label={label}
					role="img"
					{...props}
				>
					<path
						fillRule="evenodd"
						clipRule="evenodd"
						d="M11.2197 2.21967C11.5126 1.92678 11.9874 1.92678 12.2803 2.21967L21.7803 11.7197C22.0732 12.0126 22.0732 12.4874 21.7803 12.7803C21.4874 13.0732 21.0126 13.0732 20.7197 12.7803L19.5 11.5607L12.5607 18.5L13.7803 19.7197C14.0732 20.0126 14.0732 20.4874 13.7803 20.7803C13.4874 21.0732 13.0126 21.0732 12.7197 20.7803L8.5 16.5607L4.28033 20.7803C3.98744 21.0732 3.51256 21.0732 3.21967 20.7803C2.92678 20.4874 2.92678 20.0126 3.21967 19.7197L7.43934 15.5L3.21967 11.2803C2.92678 10.9874 2.92678 10.5126 3.21967 10.2197C3.51256 9.92678 3.98744 9.92678 4.28033 10.2197L5.5 11.4393L12.4393 4.5L11.2197 3.28033C10.9268 2.98744 10.9268 2.51256 11.2197 2.21967Z"
					/>
				</svg>
			);
		case "s":
			return (
				<svg
					viewBox="0 0 16 16"
					fill="currentColor"
					xmlns="http://www.w3.org/2000/svg"
					width={size}
					height={size}
					aria-label={label}
					role="img"
					{...props}
				>
					<path d="M8.73727 1.56934C9.52277 0.928699 10.6818 0.97492 11.414 1.70703L14.2929 4.58594L14.4306 4.73731C15.0286 5.47047 15.0286 6.52953 14.4306 7.2627L14.2929 7.41406C13.9179 7.78908 13.4092 7.99993 12.8789 8H11.914C11.8146 8.00003 11.7182 8.02963 11.6367 8.08399L11.5605 8.14649L11.1464 8.56055C11.0527 8.65428 11 8.78152 11 8.91406V10.8789C10.9998 12.6051 8.97776 13.4963 7.70602 12.4043L7.5859 12.293L5.99996 10.707L2.85348 13.8535C2.65822 14.0488 2.34171 14.0488 2.14645 13.8535C1.95118 13.6583 1.95118 13.3417 2.14645 13.1465L5.29293 10L3.70699 8.41406C2.44728 7.15417 3.33945 5.00019 5.12106 5H7.0859C7.21844 4.99995 7.34569 4.94724 7.43942 4.85352L7.85348 4.43946L7.91598 4.36328C7.97034 4.28178 7.99993 4.18535 7.99996 4.08594V3.1211C8.00003 2.59075 8.21088 2.08205 8.5859 1.70703L8.73727 1.56934Z" />
				</svg>
			);
		default:
			return (
				<svg
					viewBox="0 0 20 20"
					fill="currentColor"
					xmlns="http://www.w3.org/2000/svg"
					width={size}
					height={size}
					aria-label={label}
					role="img"
					{...props}
				>
					<path d="M10.0001 4.12144C10.0001 2.33963 12.1544 1.4473 13.4143 2.70723L17.293 6.58591C18.5529 7.84584 17.6606 10.0001 15.8788 10.0001H14.6214C14.3562 10.0001 14.1019 10.1055 13.9143 10.293L13.293 10.9143C13.1055 11.1019 13.0001 11.3562 13.0001 11.6214V14.3788C13.0001 16.1606 10.8458 17.0529 9.58591 15.793L7.25 13.4571L3.85355 16.8536C3.65829 17.0488 3.34171 17.0488 3.14645 16.8536C2.95118 16.6583 2.95118 16.3417 3.14645 16.1464L6.54289 12.75L4.20723 10.4143C2.9473 9.1544 3.83963 7.00012 5.62144 7.00012H8.3788C8.64402 7.00012 8.89837 6.89476 9.08591 6.70723L9.70723 6.08591C9.89476 5.89837 10.0001 5.64402 10.0001 5.3788V4.12144Z" />
				</svg>
			);
	}
};

IconPinFilled.iconName = "pin--filled";

export default IconPinFilled;
