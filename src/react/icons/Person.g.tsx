import type { SVGProps } from "react";
import { sizeMap } from "../../metadata/sizing.js";
import type { IconProps } from "../types.js";

const IconPerson = (props: IconProps & SVGProps<SVGSVGElement>) => {
	const size = sizeMap[props?.size ?? "m"];
	const label = props?.label ?? "Icon";

	switch (props?.size) {
		case "l":
			return (
				<svg
					viewBox="0 0 24 24"
					fill="currentColor"
					xmlns="http://www.w3.org/2000/svg"
					width={size}
					height={size}
					aria-label={label}
					role="img"
					{...props}
				>
					<path
						fillRule="evenodd"
						clipRule="evenodd"
						d="M17 7C17 9.76142 14.7614 12 12 12C9.23858 12 7 9.76142 7 7C7 4.23858 9.23858 2 12 2C14.7614 2 17 4.23858 17 7ZM15.5 7C15.5 8.933 13.933 10.5 12 10.5C10.067 10.5 8.5 8.933 8.5 7C8.5 5.067 10.067 3.5 12 3.5C13.933 3.5 15.5 5.067 15.5 7Z"
					/>
					<path
						fillRule="evenodd"
						clipRule="evenodd"
						d="M14 14H10C6.68629 14 4 16.6863 4 20C4 21.1046 4.89543 22 6 22H18C19.1046 22 20 21.1046 20 20C20 16.6863 17.3137 14 14 14ZM5.5 20C5.5 17.5147 7.51472 15.5 10 15.5H14C16.4853 15.5 18.5 17.5147 18.5 20C18.5 20.2761 18.2761 20.5 18 20.5H6C5.72386 20.5 5.5 20.2761 5.5 20Z"
					/>
				</svg>
			);
		default:
			return (
				<svg
					viewBox="0 0 20 20"
					fill="currentColor"
					xmlns="http://www.w3.org/2000/svg"
					width={size}
					height={size}
					aria-label={label}
					role="img"
					{...props}
				>
					<path
						fillRule="evenodd"
						clipRule="evenodd"
						d="M13.9999 6C13.9999 8.20914 12.2091 10 9.99995 10C7.79081 10 5.99995 8.20914 5.99995 6C5.99995 3.79086 7.79081 2 9.99995 2C12.2091 2 13.9999 3.79086 13.9999 6ZM12.9999 6C12.9999 7.65685 11.6568 9 9.99995 9C8.3431 9 6.99995 7.65685 6.99995 6C6.99995 4.34315 8.3431 3 9.99995 3C11.6568 3 12.9999 4.34315 12.9999 6Z"
					/>
					<path
						fillRule="evenodd"
						clipRule="evenodd"
						d="M14.2511 18C15.7692 18 17.0481 16.7238 16.4671 15.3212C16.1153 14.4719 15.5997 13.7003 14.9497 13.0503C14.2997 12.4002 13.528 11.8846 12.6787 11.5328C11.8295 11.1811 10.9192 11 9.99995 11C9.0807 11 8.17044 11.1811 7.32117 11.5328C6.47189 11.8846 5.70021 12.4002 5.0502 13.0503C4.40019 13.7003 3.88458 14.4719 3.53279 15.3212C2.95182 16.7238 4.23066 18 5.74883 18H14.2511ZM14.2426 13.7574C14.7997 14.3145 15.2417 14.9759 15.5432 15.7039C15.6713 16.0132 15.6099 16.2833 15.3969 16.5244C15.1613 16.791 14.7412 17 14.2511 17H5.74883C5.25866 17 4.83858 16.791 4.60298 16.5244C4.38996 16.2833 4.32856 16.0132 4.45667 15.7039C4.7582 14.9759 5.20016 14.3145 5.75731 13.7574C6.31446 13.2002 6.9759 12.7583 7.70385 12.4567C8.4318 12.1552 9.21202 12 9.99995 12C10.7879 12 11.5681 12.1552 12.2961 12.4567C13.024 12.7583 13.6854 13.2002 14.2426 13.7574Z"
					/>
				</svg>
			);
	}
};

IconPerson.iconName = "person";

export default IconPerson;
