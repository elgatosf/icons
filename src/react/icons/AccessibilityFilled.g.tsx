import type { SVGProps } from "react";
import { sizeMap } from "../../metadata/sizing.js";
import type { IconProps } from "../types.js";

const IconAccessibilityFilled = (props: IconProps & SVGProps<SVGSVGElement>) => {
	const size = sizeMap[props?.size ?? "m"];
	const label = props?.label ?? "Icon";

	switch (props?.size) {
		case "l":
			return (
				<svg
					viewBox="0 0 24 24"
					fill="currentColor"
					xmlns="http://www.w3.org/2000/svg"
					width={size}
					height={size}
					aria-label={label}
					role="img"
					{...props}
				>
					<path
						fillRule="evenodd"
						clipRule="evenodd"
						d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM12 9.5C13.1046 9.5 14 8.60457 14 7.5C14 6.39543 13.1046 5.5 12 5.5C10.8954 5.5 10 6.39543 10 7.5C10 8.60457 10.8954 9.5 12 9.5ZM7.22548 10.2697C7.43259 9.91099 7.89128 9.78808 8.25 9.99519C9.39014 10.6535 10.6835 11 12 11C13.3165 11 14.6099 10.6535 15.75 9.99519C16.1087 9.78808 16.5674 9.91099 16.7745 10.2697C16.9816 10.6284 16.8587 11.0871 16.5 11.2942C15.3491 11.9587 14.0682 12.3585 12.75 12.4687V13.9906L15.3397 17.2866C15.5956 17.6123 15.5391 18.0838 15.2134 18.3397C14.8877 18.5956 14.4162 18.5391 14.1603 18.2134L12 15.4639L9.83974 18.2134C9.58383 18.5391 9.11234 18.5956 8.78663 18.3397C8.46093 18.0838 8.40435 17.6123 8.66026 17.2866L11.25 13.9906V12.4687C9.93183 12.3585 8.65088 11.9587 7.5 11.2942C7.14128 11.0871 7.01837 10.6284 7.22548 10.2697Z"
					/>
				</svg>
			);
		case "s":
			return (
				<svg
					viewBox="0 0 16 16"
					fill="currentColor"
					xmlns="http://www.w3.org/2000/svg"
					width={size}
					height={size}
					aria-label={label}
					role="img"
					{...props}
				>
					<path
						fillRule="evenodd"
						clipRule="evenodd"
						d="M15 8C15 11.866 11.866 15 8 15C4.13401 15 1 11.866 1 8C1 4.13401 4.13401 1 8 1C11.866 1 15 4.13401 15 8ZM11.3321 6.73775C11.4377 6.99288 11.3166 7.28536 11.0615 7.39104C10.2384 7.73196 9.37262 7.92974 8.5 7.98436V8.82461L10.3904 11.1877C10.5629 11.4033 10.528 11.7179 10.3123 11.8904C10.0967 12.0629 9.78207 12.028 9.60957 11.8123L8 9.80039L6.39043 11.8123C6.21793 12.028 5.90328 12.0629 5.68765 11.8904C5.47202 11.7179 5.43706 11.4033 5.60957 11.1877L7.5 8.82461V7.98436C6.62738 7.92974 5.7616 7.73196 4.93853 7.39104C4.68341 7.28536 4.56226 6.99288 4.66794 6.73776C4.77361 6.48263 5.0661 6.36148 5.32122 6.46716C7.03641 7.17761 8.96359 7.17761 10.6788 6.46716C10.9339 6.36148 11.2264 6.48263 11.3321 6.73775ZM9 5C9 5.55228 8.55228 6 8 6C7.44772 6 7 5.55228 7 5C7 4.44772 7.44772 4 8 4C8.55228 4 9 4.44772 9 5Z"
					/>
				</svg>
			);
		default:
			return (
				<svg
					viewBox="0 0 20 20"
					fill="currentColor"
					xmlns="http://www.w3.org/2000/svg"
					width={size}
					height={size}
					aria-label={label}
					role="img"
					{...props}
				>
					<path
						fillRule="evenodd"
						clipRule="evenodd"
						d="M10 18C14.4183 18 18 14.4183 18 10C18 5.58172 14.4183 2 10 2C5.58172 2 2 5.58172 2 10C2 14.4183 5.58172 18 10 18ZM10 8C10.8284 8 11.5 7.32843 11.5 6.5C11.5 5.67157 10.8284 5 10 5C9.17157 5 8.5 5.67157 8.5 6.5C8.5 7.32843 9.17157 8 10 8ZM6.5 8.06218C6.26085 7.92411 5.95506 8.00604 5.81699 8.24519C5.67892 8.48434 5.76085 8.79013 6 8.9282C7.07145 9.5468 8.26972 9.90732 9.5 9.98436V10.819L7.11589 13.6799C6.93911 13.892 6.96777 14.2073 7.17991 14.3841C7.39205 14.5609 7.70733 14.5322 7.88411 14.3201L10 11.781L12.1159 14.3201C12.2927 14.5322 12.608 14.5609 12.8201 14.3841C13.0322 14.2073 13.0609 13.892 12.8841 13.6799L10.5 10.819V9.98436C11.7303 9.90732 12.9286 9.5468 14 8.9282C14.2391 8.79013 14.3211 8.48434 14.183 8.24519C14.0449 8.00604 13.7391 7.92411 13.5 8.06218C12.4359 8.67656 11.2288 9 10 9C8.77124 9 7.56413 8.67656 6.5 8.06218Z"
					/>
				</svg>
			);
	}
};

IconAccessibilityFilled.iconName = "accessibility--filled";

export default IconAccessibilityFilled;
